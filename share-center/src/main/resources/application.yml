spring:
  datasource:
    username: root
    password:
    url: jdbc:mysql://127.0.0.1:3306/sc_share_center?autoReconnect=true&useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      # 连接池最大连接数
      maximum-pool-size: 12
      # 空闲时保持最小连接数
      minimum-idle: 5
      # 空闲连接存活时间
      idle-timeout: 300000
      # 连接超时时间
      connection-timeout: 20000
      # 测试sql
      connection-test-query: select 1
  application:
    name: share-service
  zipkin:
    base-url: http://localhost:9411/
    discovery-client-enabled: false
  sleuth:
    sampler:
      # 抽样率,默认是0.1(10%,表示90%的数据都会丢弃)
      #1.0表示100%,表示所有数据都会上报给zipkin
      probability: 1.0
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848
      discovery:
        namespace: 73be76f5-5fe5-4028-9fc5-d03c169a3cf8
        cluster-name: a-center
        metadata:
          version: v1
          target-version: v1

    ##sentinel控制台声明
    filter:
      #打开/关闭掉对Spring MVC端点的保护
      enabled: true
    sentinel:
      transport:
        port: 8719
        dashboard: localhost:8080
      ##需要设置为false，否则簇点链路会不正常，流控模式里面的链路会不生效
      web-context-unify: false
    ##cloud stream的配置
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
      bindings:
        output:
          destination: stream-test-topic
  ##表示后发现的bean会覆盖之前相同名称的bean,避免冲突
  main:
    allow-bean-definition-overriding: true
server:
  port: 8090
#局部负载均衡配置(但报错)
user-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#饥饿加载
ribbon:
  eager-load:
    enabled: true
    clients: user-service
##feign的日志是建立在 debug日志模式的基础上的
logging:
  level:

    com:
      corn:
        springcloud:
          start:
            share:
              mapper: debug
            feignclient: debug
feign:
  sentinel:
    ##feign启用sentinel
    enabled: true
  client:
    config:
      #全局配置
      default:
        loggerLevel: BASIC
        ##feign拦截器
        requestInterceptors:
          - com.corn.springcloud.start.feignclient.TokenRelayRequestInterceptor
      ##针对特定的client设置日志级别
      user-service:
        loggerLevel: FULL
  httpclient:
    enabled: true
    # feign 最大连接数
    max-connections: 200
    # feign 单个路径(mapping)的最大连接数
    max-connections-per-route: 1
##actuator声明
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
resttemplate:
  sentinel:
    ##开启@SentinelRestTempalte注解
    enabled: true

rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    ##好像不指定group会报错
    group: test-group